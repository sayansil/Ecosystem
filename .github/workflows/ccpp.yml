name: build

on:
  push:
      branches:
      - flatbuffer
      paths:
      - 'Cpp/**'
      - '.github/workflows/ccpp.yml'
  pull_request:
      branches:
      - flatbuffer
      paths:
      - 'Cpp/**'
      - '.github/workflows/ccpp.yml'

jobs:

  build-clang-debug:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        include:
          - os: ubuntu-20.04
            os_identifier: lin
            installer: 'sudo apt'
            sys_update: 'update'
            dependencies: 'ninja-build clang-12'
          - os: macos-11
            os_identifier: osx
            installer: 'brew'
            sys_update: 'upgrade'
            dependencies: 'ninja'
    steps:
    - uses: actions/checkout@v2

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-clang-dbg

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-clang-dbg

  build-clang-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        include:
          - os: ubuntu-20.04
            os_identifier: lin
            zip_os_identifier: linux
            installer: 'sudo apt'
            sys_update: 'update'
            dependencies: 'ninja-build clang-12'
          - os: macos-11
            os_identifier: osx
            zip_os_identifier: osx
            installer: 'brew'
            sys_update: 'upgrade'
            dependencies: 'ninja'
    steps:
    - uses: actions/checkout@v2

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-clang-rel

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-clang-rel

    - name: upload-setup
      uses: actions/upload-artifact@v2
      with:
        name: ecosystem_setup_${{ matrix.zip_os_identifier }}_clang
        path: Cpp/build/${{ matrix.os_identifier }}-clang-rel/setup

    - name: upload-randomTests
      uses: actions/upload-artifact@v2
      with:
        name: ecosystem_random_tests_${{ matrix.zip_os_identifier }}_clang
        path: Cpp/build/${{ matrix.os_identifier }}-clang-rel/RandomTests

  build-gcc-debug:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        include:
          - os: ubuntu-20.04
            os_identifier: lin
            installer: 'sudo apt'
            sys_update: 'update'
            dependencies: 'ninja-build'
          - os: macos-11
            os_identifier: osx
            installer: 'brew'
            sys_update: 'upgrade'
            dependencies: 'gcc ninja'
    steps:
    - uses: actions/checkout@v2

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-gcc-dbg

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-gcc-dbg

  build-gcc-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        include:
          - os: ubuntu-20.04
            os_identifier: lin
            zip_os_identifier: linux
            installer: 'sudo apt'
            sys_update: 'update'
            dependencies: 'ninja-build'
          - os: macos-11
            os_identifier: osx
            zip_os_identifier: osx
            installer: 'brew'
            sys_update: 'upgrade'
            dependencies: 'gcc ninja'
    steps:
    - uses: actions/checkout@v2

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-gcc-rel

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-gcc-rel

    - name: upload-setup
      uses: actions/upload-artifact@v2
      with:
        name: ecosystem_setup_${{ matrix.zip_os_identifier }}_gcc
        path: Cpp/build/${{ matrix.os_identifier }}-gcc-rel/setup

    - name: upload-randomTests
      uses: actions/upload-artifact@v2
      with:
        name: ecosystem_random_tests_${{ matrix.zip_os_identifier }}_gcc
        path: Cpp/build/${{ matrix.os_identifier }}-gcc-rel/RandomTests

  build-msvc-debug:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        include:
          - os: windows-2022
            os_identifier: win
            installer: 'choco'
            sys_update: 'upgrade all'
            dependencies: 'ninja'
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1.10.0

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-msvc-dbg

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-msvc-dbg

  build-msvc-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        include:
          - os: windows-2022
            os_identifier: win
            zip_os_identifier: windows
            installer: 'choco'
            sys_update: 'upgrade all'
            dependencies: 'ninja'
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1.10.0

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-msvc-rel

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-msvc-rel

    - name: upload-setup
      uses: actions/upload-artifact@v2
      with:
        name: ecosystem_setup_${{ matrix.zip_os_identifier }}_msvc
        path: Cpp/build/${{ matrix.os_identifier }}-msvc-rel/setup

    - name: upload-randomTests
      uses: actions/upload-artifact@v2
      with:
        name: ecosystem_random_tests_${{ matrix.zip_os_identifier }}_msvc
        path: Cpp/build/${{ matrix.os_identifier }}-msvc-rel/RandomTests
        