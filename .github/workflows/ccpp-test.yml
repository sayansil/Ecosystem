name: test

on:
  push:
      branches:
      - flatbuffer
      paths:
      - 'Cpp/**'
      - '.github/workflows/ccpp-test.yml'
  pull_request:
      branches:
      - flatbuffer
      paths:
      - 'Cpp/**'
      - '.github/workflows/ccpp-test.yml'

jobs:

  build-clang:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        build_type: [rel]
        include:
          - os: ubuntu-20.04
            os_identifier: lin
            zip_os_identifier: linux
            installer: 'sudo apt'
            dependencies: 'ninja-build clang-12'
            set_root: 'export ECOSYSTEM_ROOT=`pwd`'
          - os: macos-11
            os_identifier: osx
            zip_os_identifier: osx
            installer: 'brew'
            dependencies: 'ninja'
            set_root: 'export ECOSYSTEM_ROOT=`pwd`'
    steps:
    - uses: actions/checkout@v2

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-clang-${{ matrix.build_type }}

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-clang-${{ matrix.build_type }}

    - name: run
      run: |
        ${{ matrix.set_root }}
        cd Cpp
        ctest --preset test-${{ matrix.os_identifier }}-clang-${{ matrix.build_type }}

  build-gcc:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        build_type: [rel]
        include:
          - os: ubuntu-20.04
            os_identifier: lin
            zip_os_identifier: linux
            installer: 'sudo apt'
            dependencies: 'ninja-build'
            set_root: 'export ECOSYSTEM_ROOT=`pwd`'
          - os: macos-11
            os_identifier: osx
            zip_os_identifier: osx
            installer: 'brew'
            dependencies: 'gcc ninja'
            set_root: 'export ECOSYSTEM_ROOT=`pwd`'
    steps:
    - uses: actions/checkout@v2

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-gcc-${{ matrix.build_type }}

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-gcc-${{ matrix.build_type }}
    
    - name: run
      run: |
        ${{ matrix.set_root }}
        cd Cpp
        ctest --preset test-${{ matrix.os_identifier }}-gcc-${{ matrix.build_type }}

  build-msvc:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        build_type: [rel]
        include:
          - os: windows-2022
            os_identifier: win
            zip_os_identifier: windows
            installer: 'choco'
            dependencies: 'ninja'
            set_root: "$env:ECOSYSTEM_ROOT = ($pwd).path"
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1.10.0

    - name: prepare-build
      run: |
        ${{ matrix.installer }} install ${{ matrix.dependencies }}

    - name: configure-build
      run: |
        cd Cpp
        cmake --preset ${{ matrix.os_identifier }}-msvc-${{ matrix.build_type }}

    - name: build
      run: |
        cd Cpp
        cmake --build --preset ${{ matrix.os_identifier }}-msvc-${{ matrix.build_type }}
  
    - name: run
      run: |
        ${{ matrix.set_root }}
        cd Cpp
        ctest --preset test-${{ matrix.os_identifier }}-msvc-${{ matrix.build_type }}
